name: Deploy releases

on:
  push:
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}

    steps:
      - uses: actions/checkout@v2
      - name: generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v3.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'zulu'
          java-version: "11"
      - id: vars
        run: echo ::set-output name=tag::${GITHUB_REF:10}
      - name: Copy secrets
        run: |
          cd mobile
          echo ${{ secrets.KEYSTORE_B64 }} | base64 -d | zcat >> mw-release.keystore
          echo ${{ secrets.KEYSTORE_PROPS_B64 }} | base64 -d | zcat >> mw-release.properties
          cd ..
          cd wear
          echo ${{ secrets.KEYSTORE_B64 }} | base64 -d | zcat >> mw-release.keystore
          echo ${{ secrets.KEYSTORE_PROPS_B64 }} | base64 -d | zcat >> mw-release.properties
          cd ..
      - name: "./gradlew assemble"
        uses: eskatos/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        with:
          arguments: assembleRelease bundleRelease
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload release "mobile.apk"
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mobile/build/outputs/apk/release/mobile-release.apk
          asset_name: materiawatch-mobile-${{ steps.vars.outputs.tag }}.apk
          asset_content_type: application/zip
      - name: Upload release "wear.apk"
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: wear/build/outputs/apk/release/wear-release.apk
          asset_name: materiawatch-wear-${{ steps.vars.outputs.tag }}.apk
          asset_content_type: application/zip
